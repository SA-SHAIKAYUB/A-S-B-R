package com.boot.angular.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.boot.angular.exception.ResourceNotFoundException;
import com.boot.angular.pojo.Employee;
import com.boot.angular.repository.EmployeeRepository;

@RestController
@RequestMapping("/api/v1/")
public class EmployeeController {

	@Autowired
	private EmployeeRepository employeeRepository;

	@CrossOrigin(origins = "http://localhost:4200")
	@GetMapping("/employees")
	public List<Employee> getAllEmployees() {
		return employeeRepository.findAll();

	}

	@CrossOrigin(origins = "http://localhost:4200")

	@PostMapping("employee")
	public void saveAllEmployees(@RequestBody Employee employee) {
		employeeRepository.save(employee);

	}

	@CrossOrigin(origins = "http://localhost:4200")
	@PostMapping("employees")
	public Employee creatEmployee(@RequestBody Employee employee) {
		return employeeRepository.save(employee);

	}

	@CrossOrigin(origins = "http://localhost:4200")
	@GetMapping("/employees/{id}")
	
	public ResponseEntity<Employee> getEmployeeById(@PathVariable Long id) {
		Employee employee = employeeRepository.findById(id)
				.orElseThrow(() -> new ResourceNotFoundException("EmployeeNotExist"+ id));
		return new ResponseEntity<>(employee, HttpStatus.OK);

	}
	@CrossOrigin(origins = "http://localhost:4200")
	@PutMapping("/employee/{id}")
	public ResponseEntity<Employee> updateEmployeeById(@RequestBody Employee update,@PathVariable Long id){
		
	
			Employee employee = employeeRepository.findById(id)
					.orElseThrow(() -> new ResourceNotFoundException("EmployeeNotExist"+ id));
			
		employee.setFirstName(update.getFirstName());
		employee.setLastName(update.getLastName());
		employee.setEmail(update.getEmail());
		Employee updateEmployee = employeeRepository.save(employee);
		return new ResponseEntity<>( updateEmployee,HttpStatus.OK);
		
		
	}
	
	/*
	 * @DeleteMapping("/employees/{id}") public int deleteEmployeeById(@PathVariable
	 * Long id) {
	 * 
	 * return employeeRepository.deleteById(id);
	 * 
	 * 
	 * }
	 */
	
	
	
	
	
	
	

}
